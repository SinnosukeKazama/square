プログラムの流れ：：：：
入力＝マップ縦横の大きさ
入力から必要メモリ確保。
入力からマップ生成。
マップ走査して以下のデータを求める。
	正方形の最大辺長
	最大辺長の正方形を描ける位置
データから正方形を描く。
マップ出力。

補足：：：：
bsqの課題をもとに作った。以下課題規則から外れている点。
write関数で文字を出力。 -> printf関数で文字を出力。
MkFileを扱っていない。
コマンドライン引数からマップファイルを指定(マップファイルを読み込む）。 -> コマンドライン引数からマップ縦横の大きさを指定(プログラム内でマップ生成)。

関数：：：：
<main.c>
main();

<solver.c>
求めるもの：
	1)任意の点を左上角としたとき描ける正方形の辺長、2) 1)の最大値とその場所
求め方：
	マップデータの任意の点を、正方形の左上角とする。
	正方形の辺を1ずつ増やす。終端条件（障害物'o' または マップ端まで）
	辺長データに書き込まれるもの：終端条件が真のときの正方形の辺長さ。-> 1)
	辺長データを走査、求めるもの：辺長データから一番大きな値 かつ 最初に見つかった値。(添字がより小さいもの) -> 2)

sides_data();
	solver_sizeofside();
write_sq();
	solve_max();
<memory.c>
allocate_data();
free_data();
generate_map();

<out.c>
out_data();
	out_sizeofside();
	out_map();

<sub.c>
ft_min();
ft_int_calloc();
ft_char_calloc();
ft_atoi();
	ft_strlen();
	ft_power();

*インデントは関数f内で関数gが呼び出されていることを表す。(同一ファイル内にある関数に限る。）
f();
	g();

	
